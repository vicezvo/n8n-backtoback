{
  "active": false,
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Remove Duplicates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Filter1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter1": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Google Sheets1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-05-10T09:42:27.612Z",
  "id": "c3d22lbLM8q3D3PP",
  "meta": null,
  "name": "GG Map Scrapper",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -2100,
        20
      ],
      "id": "1332f018-fff7-4898-bb94-cf614ae51227",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "11clc2wIme_bTXAATY7seRQ7SEz6S2CFg9uAK6rSpbWU",
          "mode": "list",
          "cachedResultName": "Scrape Google Maps Emails WITHOUT Paying for APIs",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/11clc2wIme_bTXAATY7seRQ7SEz6S2CFg9uAK6rSpbWU/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Topic",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/11clc2wIme_bTXAATY7seRQ7SEz6S2CFg9uAK6rSpbWU/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -1880,
        20
      ],
      "id": "f14530be-7327-4f6f-83e6-1b6b8227faf1",
      "name": "Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "8050CbIUTPPd5eLC",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://www.google.com/maps/search/{{ $json.Topic }}",
        "options": {
          "allowUnauthorizedCerts": true,
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1660,
        20
      ],
      "id": "7be00e62-f256-4d40-9f0e-627b5887be36",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "jsCode": "function extractUrls($input) {\n  // Get data from first item\n  const data = $input.first().json.data;\n  \n  // Regular expression for matching URLs\n  const urlRegex = /https?:\\/\\/(www\\.)?[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+/gi;;\n  \n  // Find all URLs\n  const websites = data.match(urlRegex) || [];\n  \n  // Convert URLs to base URLs and remove duplicates\n  const uniqueWebsites = [...new Set(websites)].map(url => {\n    if (url.startsWith('www.')) {\n      return 'https://' + url;\n    }\n    return url;\n  });\n  \n  // Return in proper n8n format\n  return uniqueWebsites.map(website => ({\n    json: {\n      wesite: website\n    }\n  }));\n}\n\nreturn extractUrls($input);"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1440,
        20
      ],
      "id": "9f17b324-43ec-4a85-9d22-6af7bd603ff8",
      "name": "Code",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "862c48a4-2ac4-4748-a7a4-e7e95eadda49",
              "leftValue": "={{ $json.wesite }}",
              "rightValue": "google",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            },
            {
              "id": "d7558a16-f454-463c-b63d-1aee14f5a0ca",
              "leftValue": "={{ $json.wesite }}",
              "rightValue": "schema",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            },
            {
              "id": "d4b89eb2-5783-4bad-a9cd-c4bbaa0dcd78",
              "leftValue": "={{ $json.wesite }}",
              "rightValue": "gstatic",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            },
            {
              "id": "64198207-079c-4989-92f8-bfa4b818c898",
              "leftValue": "={{ $json.wesite }}",
              "rightValue": "ggpht",
              "operator": {
                "type": "string",
                "operation": "notContains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -1220,
        20
      ],
      "id": "bffb4951-755a-4cd6-95f0-62e5587a8519",
      "name": "Filter"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 2,
      "position": [
        -1000,
        20
      ],
      "id": "d1ee1f2b-fdc7-43ab-840e-db8230574721",
      "name": "Remove Duplicates"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -560,
        20
      ],
      "id": "6741c74e-7f29-41a2-bc79-922149fa229a",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "url": "={{ $json.wesite }}",
        "options": {
          "redirect": {
            "redirect": {
              "followRedirects": false
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -120,
        120
      ],
      "id": "83734d93-6204-44e7-8507-e1717622372a",
      "name": "HTTP Request1",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        100,
        120
      ],
      "id": "8c8fb0a3-feec-497a-85ff-c5facb16c3b8",
      "name": "Wait",
      "webhookId": "95b835f9-1f41-4653-94f8-67929786f941"
    },
    {
      "parameters": {
        "jsCode": "function extractUrls($input) {\n  // Get data from first item\n  const data = $input.first().json.data;\n  \n  // Regular expression for matching URLs\n  const urlRegex = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}/gi;;\n  \n  // Find all URLs\n  const websites = data.match(urlRegex) || [];\n  \n  // Convert URLs to base URLs and remove duplicates\n  const uniqueWebsites = [...new Set(websites)].map(url => {\n    return url;\n  });\n  \n  // Return in proper n8n format\n  return uniqueWebsites.map(website => ({\n    json: {\n      wesite: website\n    }\n  }));\n}\n\nreturn extractUrls($input);"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        320,
        120
      ],
      "id": "1a83ef9c-a00d-4a2d-9085-bf5a2e9609a7",
      "name": "Code1",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c77f2a12-ca41-4be4-9756-1e018ffb1faf",
              "leftValue": "={{ $json.wesite }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "d61a6ba7-6e9a-4289-89b3-110117555eec",
              "leftValue": "={{ $json.wesite }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -80,
        -140
      ],
      "id": "6372ac87-d45d-4a06-9cf6-d2dc83fac71a",
      "name": "Filter1",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -340,
        -80
      ],
      "id": "f51ddcb6-ab03-44c0-9f53-243dd4b24735",
      "name": "Wait1",
      "webhookId": "2f9dbd0b-8f1c-4e73-ad5e-b9d8a1b27ea9"
    },
    {
      "parameters": {
        "fieldToSplitOut": "wesite",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        140,
        -140
      ],
      "id": "a26347f0-c9a0-4dd4-b3e0-78d1f217735a",
      "name": "Split Out"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "11clc2wIme_bTXAATY7seRQ7SEz6S2CFg9uAK6rSpbWU",
          "mode": "list",
          "cachedResultName": "Scrape Google Maps Emails WITHOUT Paying for APIs",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/11clc2wIme_bTXAATY7seRQ7SEz6S2CFg9uAK6rSpbWU/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 402057574,
          "mode": "list",
          "cachedResultName": "Emails",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/11clc2wIme_bTXAATY7seRQ7SEz6S2CFg9uAK6rSpbWU/edit#gid=402057574"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Emails": "={{ $json.wesite }}"
          },
          "matchingColumns": [
            "Emails"
          ],
          "schema": [
            {
              "id": "Emails",
              "displayName": "Emails",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {
          "useAppend": true
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        360,
        -140
      ],
      "id": "2375e3c3-cb5a-4571-a610-ca4200987eed",
      "name": "Google Sheets1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "8050CbIUTPPd5eLC",
          "name": "Google Sheets account"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-05-10T09:37:53.753Z",
      "updatedAt": "2025-05-10T09:37:53.753Z",
      "id": "hL4d6chHaftrkJkw",
      "name": "References"
    },
    {
      "createdAt": "2025-05-10T09:37:42.163Z",
      "updatedAt": "2025-05-10T09:37:42.163Z",
      "id": "qTCgtv70RXvAQj6d",
      "name": "Draft"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-05-10T09:42:34.000Z",
  "versionId": "d1c2c0d7-5fd8-4117-8b0f-eeabedf32051"
}
{
  "active": false,
  "connections": {
    "n8n": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Config": {
      "main": [
        [
          {
            "node": "Get file data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Items",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Get File": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is new": {
      "main": [
        [
          {
            "node": "Create new file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Items": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "Create sub path",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Status": {
      "main": [
        [
          {
            "node": "Same file - Do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get file data": {
      "main": [
        [
          {
            "node": "If file too large",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create sub path": {
      "main": [
        [
          {
            "node": "Check Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is different": {
      "main": [
        [
          {
            "node": "Edit existing file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If file too large": {
      "main": [
        [
          {
            "node": "Get File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit existing file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Same file - Do nothing": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-05-10T09:52:24.138Z",
  "id": "YImrxGRwUfy3tX6Q",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "My workflow 3",
  "nodes": [
    {
      "parameters": {},
      "id": "9d0f8d25-b63d-4895-b817-4f0966435730",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        280,
        -100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Subworkflow",
        "height": 731.7039821513649,
        "width": 1910.7813046051347,
        "color": 6
      },
      "id": "2ea1fb9a-0b67-46c1-85f0-0065d354da88",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -40,
        300
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "87cfe470-01ed-4372-a844-be19c27ef3a8",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        -140,
        660
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "f6ea3963-9ca4-40d9-aa00-24a5c3ed9f6d",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        680,
        0
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "84AVctC89aZOvlne",
          "name": "n8n negatimien"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
              "name": "Done",
              "type": "boolean",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "0a56baf7-9456-4370-9d74-1df26c4b910c",
      "name": "Return",
      "type": "n8n-nodes-base.set",
      "position": [
        1520,
        480
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "url": "={{ $json.download_url }}",
        "options": {}
      },
      "id": "363288a6-1473-4e2b-8b5e-cd3ce1916b6c",
      "name": "Get File",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        480,
        360
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "45ce825e-9fa6-430c-8931-9aaf22c42585",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json.content }}",
              "rightValue": ""
            },
            {
              "id": "9619a55f-7fb1-4f24-b1a7-7aeb82365806",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              },
              "leftValue": "={{ $json.error }}",
              "rightValue": ""
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "40169a02-43a5-4fa6-a0e4-50e82ef6d910",
      "name": "If file too large",
      "type": "n8n-nodes-base.if",
      "position": [
        240,
        380
      ],
      "typeVersion": 2
    },
    {
      "parameters": {},
      "id": "d4f6d02d-314f-44bf-b9c3-7cccf8541bc9",
      "name": "Merge Items",
      "type": "n8n-nodes-base.merge",
      "position": [
        240,
        640
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"
      },
      "id": "c6b549f7-e776-419a-81ef-74a8fda67fbe",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        440,
        640
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json.github_status}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "a1b39d8b-b7dd-4f9e-b917-cdadb8ae20c8",
      "name": "Check Status",
      "type": "n8n-nodes-base.switch",
      "position": [
        840,
        640
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "761adb9d-5c5a-4f04-9446-98ccc6f43925",
      "name": "Same file - Do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1060,
        480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "a5747b4e-c075-4ccd-896b-906915db9b6a",
      "name": "File is different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1060,
        640
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "ef8422e4-86ba-46cf-8f9c-5e9c91a62de6",
      "name": "File is new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1060,
        840
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "vicezvo",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "n8n-backup",
          "mode": "list",
          "cachedResultName": "n8n-backup",
          "cachedResultUrl": "https://github.com/vicezvo/n8n-backup"
        },
        "filePath": "={{ $('n8n').item.json.name }}",
        "binaryData": true,
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
      },
      "id": "152032f9-9e8c-422a-9aec-9cf0b562413b",
      "name": "Create new file",
      "type": "n8n-nodes-base.github",
      "position": [
        1280,
        840
      ],
      "typeVersion": 1,
      "credentials": {
        "githubOAuth2Api": {
          "id": "ZDlbXv1bU69MyZfB",
          "name": "GitHub vicezvo"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "vicezvo",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "n8n-backup",
          "mode": "list",
          "cachedResultName": "n8n-backup",
          "cachedResultUrl": "https://github.com/vicezvo/n8n-backup"
        },
        "filePath": "={{ $('n8n').item.json.name }}",
        "binaryData": true,
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
      },
      "id": "119f6e56-17bc-43ca-a344-03375a262d54",
      "name": "Edit existing file",
      "type": "n8n-nodes-base.github",
      "position": [
        1280,
        640
      ],
      "typeVersion": 1,
      "credentials": {
        "githubOAuth2Api": {
          "id": "ZDlbXv1bU69MyZfB",
          "name": "GitHub vicezvo"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "aaf99811-04e1-4746-a636-15c550fcd400",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        880,
        0
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 1,
              "triggerAtMinute": 33
            }
          ]
        }
      },
      "id": "bf77639e-e58f-4312-98e1-d26e7b218351",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        280,
        100
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dae43d3b-56e5-4098-b602-862ebf5cd073",
              "name": "subPath",
              "type": "string",
              "value": "={{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "a60935a4-13b2-4e9a-b7f2-761065b2264b",
      "name": "Create sub path",
      "type": "n8n-nodes-base.set",
      "position": [
        640,
        640
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "content": "## Backup to GitHub \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using `YYYY/MM/` for the directory path and `ID.json` for the filename.\n\nThe Repo Owner, Repo Name and Main folder are set using the **Variables** feature but can be replaced with the `Config` node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage, Once the workflow has completed it will send an optional notification to Slack.\n\n### Time to Run\nTested with 1423 workflows on `1.44.1` it took under 30 minutes for the first run and under 12 minutes once the initial run is complete.",
        "height": 417,
        "width": 385,
        "color": 4
      },
      "id": "62e6da34-c9ff-4dc3-8972-00a5711c9b20",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -200,
        -180
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Main workflow loop",
        "height": 416.1856906618075,
        "width": 1272.6408145680155,
        "color": 7
      },
      "id": "9b1ad37e-794d-45bd-84e3-549d78df1b14",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        240,
        -180
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "workflowId": "={{ $workflow.id }}",
        "mode": "each",
        "options": {}
      },
      "id": "93e43486-5732-4c19-8ee2-dbdbd87fe152",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "position": [
        1100,
        20
      ],
      "typeVersion": 1,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "list",
        "owner": {
          "__rl": true,
          "value": "vicezvo",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "n8n-backup",
          "mode": "list",
          "cachedResultName": "n8n-backup",
          "cachedResultUrl": "https://github.com/vicezvo/n8n-backup"
        }
      },
      "id": "c2cf58a6-8595-49c2-936a-c59e4531b4ba",
      "name": "Get file data",
      "type": "n8n-nodes-base.github",
      "position": [
        40,
        380
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "credentials": {
        "githubOAuth2Api": {
          "id": "ZDlbXv1bU69MyZfB",
          "name": "GitHub vicezvo"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8f6d1741-772f-462a-811f-4c334185e4f0",
              "name": "repo_owner",
              "type": "string",
              "value": "={{ $vars.repo_owner }}"
            },
            {
              "id": "8cac215c-4fd7-422f-9fd2-6b2d1e5e0383",
              "name": "repo_name",
              "type": "string",
              "value": "={{ $vars.repo_name }}"
            },
            {
              "id": "eee305e9-4164-462a-86bd-80f0d58a31ae",
              "name": "repo_path",
              "type": "string",
              "value": "={{ $vars.repo_path }}"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "10b441e4-23c4-444a-9b7d-8a464074f2f0",
      "name": "Config",
      "type": "n8n-nodes-base.set",
      "position": [
        40,
        660
      ],
      "typeVersion": 3.4
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-05-10T09:52:24.138Z",
  "versionId": "1b1c9b07-1afe-4d0d-b28d-2cfcb79a63d7"
}